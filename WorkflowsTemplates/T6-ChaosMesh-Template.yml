apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: pod-kill-template
spec:
  #garbage collection strategy for completed pods
  podGC: 
    strategy: OnWorkflowCompletion
  ttlStrategy:
    secondsAfterCompletion: 0
    secondsAfterSuccess: 0     
    secondsAfterFailure: 600     
  entrypoint: chaos-execution
  archiveLogs: true
  templates:
    - name: chaos-execution
      steps:
        - - name: install-chaos-mesh
            template: install-chaos
        - - name: apply-chaos-experiment
            template: chaos-experiment
        - - name: wait
            template: wait-step
        - - name: remove-chaos-mesh
            template: uninstall-chaos

    #install chaos mesh components in the cluster
    - name: install-chaos
      container:
        image: alpine/helm
        command: [sh, "-c"]
        args:
          - |
            echo "Installing kubectl...";
            apk add --no-cache curl;
            curl -LO "https://dl.k8s.io/release/$(curl -L -s \ 
            https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl";
            chmod +x kubectl;
            mv kubectl /usr/local/bin/;
            echo "Creating Chaos Mesh namespace...";
            kubectl create ns chaos-mesh;
            echo "Adding Chaos Mesh Helm repo...";
            helm repo add chaos-mesh https://charts.chaos-mesh.org;
            helm repo update;
            echo "Installing Chaos Mesh...";
            helm install chaos-mesh chaos-mesh/chaos-mesh --namespace \ 
            chaos-mesh --set controllerManager.replicas=1;
            echo "Waiting for Chaos Mesh to be ready...";
            kubectl wait --for=condition=available -n chaos-mesh \ 
            deployment/chaos-controller-manager;

    #submit chaos experiment resource to the cluster
    - name: chaos-experiment
      resource:
        action: create
        manifest: |
          apiVersion: chaos-mesh.org/v1alpha1
          kind: Schedule
          metadata:
            name: scheduled-pod-kill
            namespace: default
          spec:
            schedule: "*/1 * * * *"  
            type: PodChaos
            historyLimit: 5  
            concurrencyPolicy: Forbid  
            podChaos:
              action: pod-kill
              mode: one  
              selector:
                namespaces:
                  - default
              duration: "30s"  
 
    #wait for the chaos experiment to finish and collect events
    - name: wait-step
      container:
        image: bitnami/kubectl
        command: [sh, "-c"]
        args: 
          - |
            sleep 600;
            kubectl get events --sort-by=.lastTimestamp -o custom-columns=\
            "TIME:.lastTimestamp,OBJECT:.involvedObject.name,REASON:.reason,MESSAGE:.message" \
            | grep Applied > /data/chaos-mesh-events.txt;
            kubectl delete schedule scheduled-pod-kill -n default;
            echo "Chaos experiment completed";
      outputs:
        artifacts:
        - name: chaos-mesh-events
          path: /data/chaos-mesh-events.txt

    #uninstall chaos mesh components
    - name: uninstall-chaos
      container:
        image: alpine/helm
        command: [sh, "-c"]
        args:
          - |
            echo "Uninstalling Chaos Mesh...";
            helm uninstall chaos-mesh -n chaos-mesh;
