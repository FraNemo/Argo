apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: net-loss-template
spec:
  podGC: 
    strategy: OnWorkflowCompletion
  ttlStrategy:
    secondsAfterCompletion: 0 # Time to live after workflow is completed, replaces ttlSecondsAfterFinished
    secondsAfterSuccess: 0     # Time to live after workflow is successful
    secondsAfterFailure: 600     # Time to live after workflow failed
  entrypoint: chaos-execution
  archiveLogs: true
  templates:
    - name: chaos-execution
      steps:
        - - name: install-chaos-mesh
            template: install-chaos
        - - name: apply-chaos-experiment
            template: chaos-experiment
        - - name: wait
            template: wait-step
        - - name: remove-chaos-mesh
            template: uninstall-chaos
    
    - name: install-chaos
      container:
        image: alpine/helm
        command: [sh, "-c"]
        args:
          - |
            echo "Installing kubectl...";
            apk add --no-cache curl;
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl";
            chmod +x kubectl;
            mv kubectl /usr/local/bin/;
            echo "Creating Chaos Mesh namespace...";
            kubectl create ns chaos-mesh;
            echo "Adding Chaos Mesh Helm repo...";
            helm repo add chaos-mesh https://charts.chaos-mesh.org;
            helm repo update;
            echo "Installing Chaos Mesh...";
            helm install chaos-mesh chaos-mesh/chaos-mesh --namespace chaos-mesh --set controllerManager.replicas=1;
            echo "Waiting for Chaos Mesh to be ready...";
            kubectl wait --for=condition=available -n chaos-mesh deployment/chaos-controller-manager;

    - name: chaos-experiment
      resource:
        action: create
        manifest: |
          apiVersion: chaos-mesh.org/v1alpha1
          kind: NetworkChaos
          metadata:
            name: net-loss
          spec:
            action: loss
            loss:
              loss: "40"
              correlation: "50"
            mode: one
            selector:
              namespaces:
                - default
            direction: both
            duration: "10m"

    - name: wait-step
      container:
        image: alpine
        command: ["sh", "-c"]
        args: ["echo 'Chaos experiment running...'; sleep 600"]
        

    - name: uninstall-chaos
      container:
        image: alpine/helm
        command: [sh, "-c"]
        args:
          - |
            echo "Uninstalling Chaos Mesh...";
            helm uninstall chaos-mesh -n chaos-mesh;